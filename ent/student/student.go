// Code generated by ent, DO NOT EDIT.

package student

const (
	// Label holds the string label denoting the student type in the database.
	Label = "student"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSID holds the string denoting the s_id field in the database.
	FieldSID = "s_id"
	// FieldNaem holds the string denoting the naem field in the database.
	FieldNaem = "naem"
	// FieldAge holds the string denoting the age field in the database.
	FieldAge = "age"
	// EdgeTeachers holds the string denoting the teachers edge name in mutations.
	EdgeTeachers = "teachers"
	// Table holds the table name of the student in the database.
	Table = "students"
	// TeachersTable is the table that holds the teachers relation/edge.
	TeachersTable = "students"
	// TeachersInverseTable is the table name for the Teacher entity.
	// It exists in this package in order to avoid circular dependency with the "teacher" package.
	TeachersInverseTable = "teachers"
	// TeachersColumn is the table column denoting the teachers relation/edge.
	TeachersColumn = "teacher_students"
)

// Columns holds all SQL columns for student fields.
var Columns = []string{
	FieldID,
	FieldSID,
	FieldNaem,
	FieldAge,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "students"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"teacher_students",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultNaem holds the default value on creation for the "naem" field.
	DefaultNaem string
)
